// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: dinuan.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetDeviceIdByDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetDeviceIdByDateRequest) Reset() {
	*x = GetDeviceIdByDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dinuan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceIdByDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceIdByDateRequest) ProtoMessage() {}

func (x *GetDeviceIdByDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dinuan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceIdByDateRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceIdByDateRequest) Descriptor() ([]byte, []int) {
	return file_dinuan_proto_rawDescGZIP(), []int{0}
}

func (x *GetDeviceIdByDateRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetDeviceIdByDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId []uint64 `protobuf:"varint,1,rep,packed,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *GetDeviceIdByDateResponse) Reset() {
	*x = GetDeviceIdByDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dinuan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceIdByDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceIdByDateResponse) ProtoMessage() {}

func (x *GetDeviceIdByDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dinuan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceIdByDateResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceIdByDateResponse) Descriptor() ([]byte, []int) {
	return file_dinuan_proto_rawDescGZIP(), []int{1}
}

func (x *GetDeviceIdByDateResponse) GetDeviceId() []uint64 {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

var File_dinuan_proto protoreflect.FileDescriptor

var file_dinuan_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x69, 0x6e, 0x75, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x61, 0x70, 0x70, 0x22, 0x2e, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x32, 0xbf, 0x01, 0x0a,
	0x0d, 0x44, 0x69, 0x6e, 0x75, 0x61, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dinuan_proto_rawDescOnce sync.Once
	file_dinuan_proto_rawDescData = file_dinuan_proto_rawDesc
)

func file_dinuan_proto_rawDescGZIP() []byte {
	file_dinuan_proto_rawDescOnce.Do(func() {
		file_dinuan_proto_rawDescData = protoimpl.X.CompressGZIP(file_dinuan_proto_rawDescData)
	})
	return file_dinuan_proto_rawDescData
}

var file_dinuan_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dinuan_proto_goTypes = []interface{}{
	(*GetDeviceIdByDateRequest)(nil),  // 0: app.getDeviceIdByDateRequest
	(*GetDeviceIdByDateResponse)(nil), // 1: app.getDeviceIdByDateResponse
}
var file_dinuan_proto_depIdxs = []int32{
	0, // 0: app.DinuanService.GetDeviceIdByStartDate:input_type -> app.getDeviceIdByDateRequest
	0, // 1: app.DinuanService.GetDeviceIdByEndDate:input_type -> app.getDeviceIdByDateRequest
	1, // 2: app.DinuanService.GetDeviceIdByStartDate:output_type -> app.getDeviceIdByDateResponse
	1, // 3: app.DinuanService.GetDeviceIdByEndDate:output_type -> app.getDeviceIdByDateResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dinuan_proto_init() }
func file_dinuan_proto_init() {
	if File_dinuan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dinuan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceIdByDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dinuan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceIdByDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dinuan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dinuan_proto_goTypes,
		DependencyIndexes: file_dinuan_proto_depIdxs,
		MessageInfos:      file_dinuan_proto_msgTypes,
	}.Build()
	File_dinuan_proto = out.File
	file_dinuan_proto_rawDesc = nil
	file_dinuan_proto_goTypes = nil
	file_dinuan_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DinuanServiceClient is the client API for DinuanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DinuanServiceClient interface {
	GetDeviceIdByStartDate(ctx context.Context, in *GetDeviceIdByDateRequest, opts ...grpc.CallOption) (*GetDeviceIdByDateResponse, error)
	GetDeviceIdByEndDate(ctx context.Context, in *GetDeviceIdByDateRequest, opts ...grpc.CallOption) (*GetDeviceIdByDateResponse, error)
}

type dinuanServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDinuanServiceClient(cc grpc.ClientConnInterface) DinuanServiceClient {
	return &dinuanServiceClient{cc}
}

func (c *dinuanServiceClient) GetDeviceIdByStartDate(ctx context.Context, in *GetDeviceIdByDateRequest, opts ...grpc.CallOption) (*GetDeviceIdByDateResponse, error) {
	out := new(GetDeviceIdByDateResponse)
	err := c.cc.Invoke(ctx, "/app.DinuanService/GetDeviceIdByStartDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dinuanServiceClient) GetDeviceIdByEndDate(ctx context.Context, in *GetDeviceIdByDateRequest, opts ...grpc.CallOption) (*GetDeviceIdByDateResponse, error) {
	out := new(GetDeviceIdByDateResponse)
	err := c.cc.Invoke(ctx, "/app.DinuanService/GetDeviceIdByEndDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DinuanServiceServer is the server API for DinuanService service.
type DinuanServiceServer interface {
	GetDeviceIdByStartDate(context.Context, *GetDeviceIdByDateRequest) (*GetDeviceIdByDateResponse, error)
	GetDeviceIdByEndDate(context.Context, *GetDeviceIdByDateRequest) (*GetDeviceIdByDateResponse, error)
}

// UnimplementedDinuanServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDinuanServiceServer struct {
}

func (*UnimplementedDinuanServiceServer) GetDeviceIdByStartDate(context.Context, *GetDeviceIdByDateRequest) (*GetDeviceIdByDateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceIdByStartDate not implemented")
}
func (*UnimplementedDinuanServiceServer) GetDeviceIdByEndDate(context.Context, *GetDeviceIdByDateRequest) (*GetDeviceIdByDateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceIdByEndDate not implemented")
}

func RegisterDinuanServiceServer(s *grpc.Server, srv DinuanServiceServer) {
	s.RegisterService(&_DinuanService_serviceDesc, srv)
}

func _DinuanService_GetDeviceIdByStartDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceIdByDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinuanServiceServer).GetDeviceIdByStartDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.DinuanService/GetDeviceIdByStartDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinuanServiceServer).GetDeviceIdByStartDate(ctx, req.(*GetDeviceIdByDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DinuanService_GetDeviceIdByEndDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceIdByDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinuanServiceServer).GetDeviceIdByEndDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.DinuanService/GetDeviceIdByEndDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinuanServiceServer).GetDeviceIdByEndDate(ctx, req.(*GetDeviceIdByDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DinuanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.DinuanService",
	HandlerType: (*DinuanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDeviceIdByStartDate",
			Handler:    _DinuanService_GetDeviceIdByStartDate_Handler,
		},
		{
			MethodName: "GetDeviceIdByEndDate",
			Handler:    _DinuanService_GetDeviceIdByEndDate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dinuan.proto",
}
