// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: authorizer.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetBaseInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerId uint32 `protobuf:"varint,1,opt,name=authorizer_id,json=authorizerId,proto3" json:"authorizer_id,omitempty"`
}

func (x *GetBaseInfoRequest) Reset() {
	*x = GetBaseInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBaseInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBaseInfoRequest) ProtoMessage() {}

func (x *GetBaseInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBaseInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBaseInfoRequest) Descriptor() ([]byte, []int) {
	return file_authorizer_proto_rawDescGZIP(), []int{0}
}

func (x *GetBaseInfoRequest) GetAuthorizerId() uint32 {
	if x != nil {
		return x.AuthorizerId
	}
	return 0
}

type GetBaseInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerAppid   string `protobuf:"bytes,1,opt,name=authorizer_appid,json=authorizerAppid,proto3" json:"authorizer_appid,omitempty"`
	AuthorizerAppname string `protobuf:"bytes,2,opt,name=authorizer_appname,json=authorizerAppname,proto3" json:"authorizer_appname,omitempty"`
}

func (x *GetBaseInfoResponse) Reset() {
	*x = GetBaseInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBaseInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBaseInfoResponse) ProtoMessage() {}

func (x *GetBaseInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBaseInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBaseInfoResponse) Descriptor() ([]byte, []int) {
	return file_authorizer_proto_rawDescGZIP(), []int{1}
}

func (x *GetBaseInfoResponse) GetAuthorizerAppid() string {
	if x != nil {
		return x.AuthorizerAppid
	}
	return ""
}

func (x *GetBaseInfoResponse) GetAuthorizerAppname() string {
	if x != nil {
		return x.AuthorizerAppname
	}
	return ""
}

type GetAuthorizeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerId    uint32 `protobuf:"varint,1,opt,name=authorizer_id,json=authorizerId,proto3" json:"authorizer_id,omitempty"`
	AuthorizerAppid string `protobuf:"bytes,2,opt,name=authorizer_appid,json=authorizerAppid,proto3" json:"authorizer_appid,omitempty"`
}

func (x *GetAuthorizeInfoRequest) Reset() {
	*x = GetAuthorizeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizeInfoRequest) ProtoMessage() {}

func (x *GetAuthorizeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorizeInfoRequest) Descriptor() ([]byte, []int) {
	return file_authorizer_proto_rawDescGZIP(), []int{2}
}

func (x *GetAuthorizeInfoRequest) GetAuthorizerId() uint32 {
	if x != nil {
		return x.AuthorizerId
	}
	return 0
}

func (x *GetAuthorizeInfoRequest) GetAuthorizerAppid() string {
	if x != nil {
		return x.AuthorizerAppid
	}
	return ""
}

type GetAuthorizeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizerId    uint32 `protobuf:"varint,1,opt,name=authorizer_id,json=authorizerId,proto3" json:"authorizer_id,omitempty"`
	AuthorizerAppid string `protobuf:"bytes,2,opt,name=authorizer_appid,json=authorizerAppid,proto3" json:"authorizer_appid,omitempty"`
	NickName        string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	HeadImg         string `protobuf:"bytes,4,opt,name=head_img,json=headImg,proto3" json:"head_img,omitempty"`
	ServiceTypeInfo uint32 `protobuf:"varint,5,opt,name=service_type_info,json=serviceTypeInfo,proto3" json:"service_type_info,omitempty"`
	VerifyTypeInfo  uint32 `protobuf:"varint,6,opt,name=verify_type_info,json=verifyTypeInfo,proto3" json:"verify_type_info,omitempty"`
	OriginId        string `protobuf:"bytes,7,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	PrincipalName   string `protobuf:"bytes,8,opt,name=principal_name,json=principalName,proto3" json:"principal_name,omitempty"`
	Alias           string `protobuf:"bytes,9,opt,name=alias,proto3" json:"alias,omitempty"`
	BussinessInfo   string `protobuf:"bytes,10,opt,name=bussiness_info,json=bussinessInfo,proto3" json:"bussiness_info,omitempty"`
	QrcodeUrl       string `protobuf:"bytes,11,opt,name=qrcode_url,json=qrcodeUrl,proto3" json:"qrcode_url,omitempty"`
}

func (x *GetAuthorizeInfoResponse) Reset() {
	*x = GetAuthorizeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorizer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthorizeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizeInfoResponse) ProtoMessage() {}

func (x *GetAuthorizeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authorizer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAuthorizeInfoResponse) Descriptor() ([]byte, []int) {
	return file_authorizer_proto_rawDescGZIP(), []int{3}
}

func (x *GetAuthorizeInfoResponse) GetAuthorizerId() uint32 {
	if x != nil {
		return x.AuthorizerId
	}
	return 0
}

func (x *GetAuthorizeInfoResponse) GetAuthorizerAppid() string {
	if x != nil {
		return x.AuthorizerAppid
	}
	return ""
}

func (x *GetAuthorizeInfoResponse) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetAuthorizeInfoResponse) GetHeadImg() string {
	if x != nil {
		return x.HeadImg
	}
	return ""
}

func (x *GetAuthorizeInfoResponse) GetServiceTypeInfo() uint32 {
	if x != nil {
		return x.ServiceTypeInfo
	}
	return 0
}

func (x *GetAuthorizeInfoResponse) GetVerifyTypeInfo() uint32 {
	if x != nil {
		return x.VerifyTypeInfo
	}
	return 0
}

func (x *GetAuthorizeInfoResponse) GetOriginId() string {
	if x != nil {
		return x.OriginId
	}
	return ""
}

func (x *GetAuthorizeInfoResponse) GetPrincipalName() string {
	if x != nil {
		return x.PrincipalName
	}
	return ""
}

func (x *GetAuthorizeInfoResponse) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *GetAuthorizeInfoResponse) GetBussinessInfo() string {
	if x != nil {
		return x.BussinessInfo
	}
	return ""
}

func (x *GetAuthorizeInfoResponse) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

var File_authorizer_proto protoreflect.FileDescriptor

var file_authorizer_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x70, 0x22, 0x39, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x6f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70, 0x70, 0x69, 0x64, 0x22, 0x98,
	0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64,
	0x5f, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x49, 0x6d, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x73,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x32, 0xa6, 0x01, 0x0a, 0x11, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authorizer_proto_rawDescOnce sync.Once
	file_authorizer_proto_rawDescData = file_authorizer_proto_rawDesc
)

func file_authorizer_proto_rawDescGZIP() []byte {
	file_authorizer_proto_rawDescOnce.Do(func() {
		file_authorizer_proto_rawDescData = protoimpl.X.CompressGZIP(file_authorizer_proto_rawDescData)
	})
	return file_authorizer_proto_rawDescData
}

var file_authorizer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_authorizer_proto_goTypes = []interface{}{
	(*GetBaseInfoRequest)(nil),       // 0: app.GetBaseInfoRequest
	(*GetBaseInfoResponse)(nil),      // 1: app.GetBaseInfoResponse
	(*GetAuthorizeInfoRequest)(nil),  // 2: app.GetAuthorizeInfoRequest
	(*GetAuthorizeInfoResponse)(nil), // 3: app.GetAuthorizeInfoResponse
}
var file_authorizer_proto_depIdxs = []int32{
	0, // 0: app.AuthorizerService.GetBaseInfo:input_type -> app.GetBaseInfoRequest
	2, // 1: app.AuthorizerService.GetAuthorizeInfo:input_type -> app.GetAuthorizeInfoRequest
	1, // 2: app.AuthorizerService.GetBaseInfo:output_type -> app.GetBaseInfoResponse
	3, // 3: app.AuthorizerService.GetAuthorizeInfo:output_type -> app.GetAuthorizeInfoResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_authorizer_proto_init() }
func file_authorizer_proto_init() {
	if File_authorizer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authorizer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBaseInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBaseInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorizer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthorizeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authorizer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authorizer_proto_goTypes,
		DependencyIndexes: file_authorizer_proto_depIdxs,
		MessageInfos:      file_authorizer_proto_msgTypes,
	}.Build()
	File_authorizer_proto = out.File
	file_authorizer_proto_rawDesc = nil
	file_authorizer_proto_goTypes = nil
	file_authorizer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthorizerServiceClient is the client API for AuthorizerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizerServiceClient interface {
	// 基本信息
	GetBaseInfo(ctx context.Context, in *GetBaseInfoRequest, opts ...grpc.CallOption) (*GetBaseInfoResponse, error)
	// 授权信息
	GetAuthorizeInfo(ctx context.Context, in *GetAuthorizeInfoRequest, opts ...grpc.CallOption) (*GetAuthorizeInfoResponse, error)
}

type authorizerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthorizerServiceClient(cc grpc.ClientConnInterface) AuthorizerServiceClient {
	return &authorizerServiceClient{cc}
}

func (c *authorizerServiceClient) GetBaseInfo(ctx context.Context, in *GetBaseInfoRequest, opts ...grpc.CallOption) (*GetBaseInfoResponse, error) {
	out := new(GetBaseInfoResponse)
	err := c.cc.Invoke(ctx, "/app.AuthorizerService/GetBaseInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizerServiceClient) GetAuthorizeInfo(ctx context.Context, in *GetAuthorizeInfoRequest, opts ...grpc.CallOption) (*GetAuthorizeInfoResponse, error) {
	out := new(GetAuthorizeInfoResponse)
	err := c.cc.Invoke(ctx, "/app.AuthorizerService/GetAuthorizeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizerServiceServer is the server API for AuthorizerService service.
type AuthorizerServiceServer interface {
	// 基本信息
	GetBaseInfo(context.Context, *GetBaseInfoRequest) (*GetBaseInfoResponse, error)
	// 授权信息
	GetAuthorizeInfo(context.Context, *GetAuthorizeInfoRequest) (*GetAuthorizeInfoResponse, error)
}

// UnimplementedAuthorizerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthorizerServiceServer struct {
}

func (*UnimplementedAuthorizerServiceServer) GetBaseInfo(context.Context, *GetBaseInfoRequest) (*GetBaseInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBaseInfo not implemented")
}
func (*UnimplementedAuthorizerServiceServer) GetAuthorizeInfo(context.Context, *GetAuthorizeInfoRequest) (*GetAuthorizeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthorizeInfo not implemented")
}

func RegisterAuthorizerServiceServer(s *grpc.Server, srv AuthorizerServiceServer) {
	s.RegisterService(&_AuthorizerService_serviceDesc, srv)
}

func _AuthorizerService_GetBaseInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBaseInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizerServiceServer).GetBaseInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AuthorizerService/GetBaseInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizerServiceServer).GetBaseInfo(ctx, req.(*GetBaseInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorizerService_GetAuthorizeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthorizeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizerServiceServer).GetAuthorizeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.AuthorizerService/GetAuthorizeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizerServiceServer).GetAuthorizeInfo(ctx, req.(*GetAuthorizeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthorizerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.AuthorizerService",
	HandlerType: (*AuthorizerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBaseInfo",
			Handler:    _AuthorizerService_GetBaseInfo_Handler,
		},
		{
			MethodName: "GetAuthorizeInfo",
			Handler:    _AuthorizerService_GetAuthorizeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authorizer.proto",
}
